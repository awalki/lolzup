services:
  postgres:
    image: postgres:15-alpine
    container_name: lolzup_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: lolzup
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - lolzup_network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    container_name: lolzup_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - lolzup_network

  bot:
    build: .
    container_name: lolzup_bot
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    command: [ "uv", "run", "main.py" ]
    networks:
      - lolzup_network

  worker:
    build: .
    container_name: lolzup_worker
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    command: [ "uv", "run", "taskiq", "worker", "tkq:broker", "--fs-discover", "--tasks-pattern", "tasks.py" ]
    networks:
      - lolzup_network

  scheduler:
    build: .
    container_name: lolzup_scheduler
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    command: [ "uv", "run", "taskiq", "scheduler", "tkq:scheduler", "--fs-discover", "--tasks-pattern", "tasks.py" ]
    networks:
      - lolzup_network

volumes:
  postgres_data:
  redis_data:

networks:
  lolzup_network:
    driver: bridge